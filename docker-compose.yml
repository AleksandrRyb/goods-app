version: '3.8'

services:
  postgres:
    image: postgres:17-alpine
    container_name: goods-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: goods_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./api
      dockerfile: Dockerfile.development
    container_name: goods-api
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USER: postgres
      DATABASE_PASSWORD: postgres
      DATABASE_NAME: goods_db
      PORT: 3000
      FRONTEND_URL: http://localhost:5173
    volumes:
      - ./api:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    command: npm run start:dev

  client:
    build:
      context: ./client
      dockerfile: Dockerfile.development
    container_name: goods-client
    restart: unless-stopped
    ports:
      - "5173:5173"
    environment:
      VITE_API_URL: http://localhost:3000
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      - api
    command: npm run dev

volumes:
  postgres_data:
    driver: local

